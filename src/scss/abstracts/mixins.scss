@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin respond($breakpoint) {
	@if $breakpoint == phone {
		@media screen and (max-width: 37.5em) { @content	};
	}
	@if $breakpoint == tab-port {
		@media screen and (max-width: 56.25em){ @content	};
	}
	@if $breakpoint == tab-land {
		@media screen and (max-width: 75em) { @content	};
	}
	@if $breakpoint == big-desktop {
		@media screen and (min-width: 112.5em) { @content	};
	}
}



// responsive mixin
$breakpoints: (
	// Extra small screen / phone
				xs: 0,
	// Small screen / phone
				sm: 576px,
	// Medium screen / tablet
				md: 768px,
	// Large screen / desktop
				lg: 992px,
	// Extra large screen / wide desktop
				xl: 1200px,
	// Extra large screen / wide desktop
				xxl: 1300px
);
// Respond above.
@mixin respond-above($breakpoint) {

	// If the breakpoint exists in the map.
	@if map-has-key($breakpoints, $breakpoint) {

		// Get the breakpoint value.
		$breakpoint-value: map-get($breakpoints, $breakpoint);

		// Write the media query.
		@media (min-width: $breakpoint-value) {
			@content;
		}

		// If the breakpoint doesn't exist in the map.
	} @else {

		// Log a warning.
		@warn 'Invalid breakpoint: #{$breakpoint}.';
	}
}
// respond below
@mixin respond-below($breakpoint) {

	// If the breakpoint exists in the map.
	@if map-has-key($breakpoints, $breakpoint) {

		// Get the breakpoint value.
		$breakpoint-value: map-get($breakpoints, $breakpoint);

		// Write the media query.
		@media (max-width: ($breakpoint-value - 1)) {
			@content;
		}

		// If the breakpoint doesn't exist in the map.
	} @else {

		// Log a warning.
		@warn 'Invalid breakpoint: #{$breakpoint}.';
	}
}
// respond between
@mixin respond-between($lower, $upper) {

	// If both the lower and upper breakpoints exist in the map.
	@if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {

		// Get the lower and upper breakpoints.
		$lower-breakpoint: map-get($breakpoints, $lower);
		$upper-breakpoint: map-get($breakpoints, $upper);

		// Write the media query.
		@media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
			@content;
		}

		// If one or both of the breakpoints don't exist.
	} @else {

		// If lower breakpoint is invalid.
		@if (map-has-key($breakpoints, $lower) == false) {

			// Log a warning.
			@warn 'Your lower breakpoint was invalid: #{$lower}.';
		}

		// If upper breakpoint is invalid.
		@if (map-has-key($breakpoints, $upper) == false) {

			// Log a warning.
			@warn 'Your upper breakpoint was invalid: #{$upper}.';
		}
	}
}
// responsive mixin